<?php
/**
 * @file
 * Code for the Luggage Blog feature.
 */

include_once 'luggage_blog.features.inc';


/*
 * Implements hook_form_alter()
 */
function luggage_blog_form_alter(&$form, &$form_state, $form_id) {
  global $user;

  if($form_id == 'lug_blog_node_form') {

    // *** Format field_lug_blog_author ***

    // wrappers around the custom markup
    $prefix = '<div class="field-type-entityreference field-name-field-lugg-blog-author form-wrapper" id="edit-field-lug-blog-author">';
    $prefix .= '<div class="form-item form-type-textfield form-item-field-lug-blog-author-und">';
    $prefix .= '<label>Author';
    $prefix .= '<span class="form-required" title="this field is required.">*</span>';
    $prefix .= "</label>";

    $suffix = '</div></div>';

    $form['field_lug_blog_author']['#type'] = 'markup';
    // display the value without the nodeID in parenthesis.
    $form['field_lug_blog_author']['#markup'] = $prefix . preg_replace("/\([^)]+\)/", "", $form['field_lug_blog_author']['und'][0]['target_id']['#default_value']) . $suffix;

    $form['field_lug_blog_author']['und'][0]['target_id']['#disabled'] = TRUE;

    // Set the default value for blog author to the people node that matches the user's email address
    if(empty($form['field_lug_blog_author']['und'][0]['target_id']['#default_value'])) {
      $people_nid = db_query("SELECT nid
                              FROM {node}
                              WHERE type='people' AND uid = :uid", array(':uid' => $user->uid))->fetchField();
      if ($people_nid) {
        $profile = node_load($people_nid);
        $value = $profile->title . " (" . $profile->nid . ")";

        $form['field_lug_blog_author']['und'][0]['target_id']['#value'] = $value;

        // TODO: This needs to be cleaned up a bit to look better
        $form['field_lug_blog_author']['#markup'] = $prefix . $profile->title . $suffix;
      }
      // if there is not a matching author, prompt the user to create their profile.
      else {
        drupal_set_message(t('You must <a href="'.$GLOBALS['base_path'].'my/profile">create your profile</a> before creating a blog entry.'), 'warning');
        // hide the empty field
        $form['field_lug_blog_author']['#markup'] = ' ';
      }

    }
  }
}

/**
 * Helper function to get the people node based on email address
 * @param $mail: email address of target people node
 * @return array|bool: nid of the people node in a form suitable for entity_load(). FALSE if not found
 */
function _luggage_blog_get_people_by_email($mail) {

  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'people')
    ->fieldCondition('field_people_email', 'email', $mail, '=');

  $result = $query->execute();

  if(!empty($result)) {
      return array_keys($result['node']);
  }

  return FALSE;
}

/**
 * Implements theme_preprocess_node()
 */
function luggage_blog_preprocess_node(&$vars) {
  // rewrite the display of the "Display author and date information" to be nicer for only
  // blog posts.
  if($vars['submitted'] && $vars['type'] == "lug_blog") {
    $vars['submitted'] = t("%datetime",
      array('%datetime' => format_date($vars['node']->created, 'news')));
  }
}
